plugins {
    id 'java'
    id 'application'
    id 'maven'
    id 'idea'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
            includes = ["*.fxml", "logo2.png", "icon.png"]
        }
    }
    test {
        resources {
            srcDirs = ["src/test/resources"]
            includes = ["*.enc"]
        }
    }
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

repositories {
    jcenter()
    mavenCentral()
}
def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}
dependencies {
    compile group: 'org.jetbrains.xodus', name: 'xodus-utils', version: '1.3.0'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.61'
    compile "org.openjfx:javafx-base:11:${platform}"
    compile "org.openjfx:javafx-graphics:11:${platform}"
    compile "org.openjfx:javafx-controls:11:${platform}"
    compile "org.openjfx:javafx-fxml:11:${platform}"

    compile 'com.google.guava:guava:27.0.1-jre'
    testImplementation 'junit:junit:4.12'
}

mainClassName = 'com.rootnetsec.cryptofile.Main'

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } 
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF'
}
apply plugin: 'java'

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}
task createPom {
    pom {
        project {
            groupId 'com.rootsecnet'
            version '1.0.0-SNAPSHOT'

            inceptionYear '2019'
            licenses {
                license {
                    name 'GNU General Public License v3.0'
                    url 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                }
            }
        }
    }.writeTo("pom.xml")
}